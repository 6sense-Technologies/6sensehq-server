upstream 6sensehq-backend-prod {
  server 6sense-backend-v2-prod:4002;
}

upstream 6sensehq-backend-beta {
  server 6sense-backend-v2-test:3000;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name api.6sensehq.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    location / {
        # proxy_pass http://6sensehq-backend-prod;
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name api.6sensehq.com;

    ssl_certificate /etc/letsencrypt/live/api.6sensehq.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.6sensehq.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass         http://6sensehq-backend-prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_request_buffering off;
    }
}

server {
    listen 80;
    server_name beta-api.6sensehq.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    location / {
        # proxy_pass http://6sensehq-backend-beta;
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name beta-api.6sensehq.com;

    ssl_certificate /etc/letsencrypt/live/beta-api.6sensehq.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/beta-api.6sensehq.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass         http://6sensehq-backend-beta;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_request_buffering off;
    }
}

# docker run --rm -v $(pwd)/nginx/ssl:/etc/letsencrypt   -v $(pwd)/nginx/ssl:/var/www/certbot   certbot/certbot certonly --webroot --webroot-path=/var/www/certbot   --email hello@6sensehq.com --agree-tos --no-eff-email   -d beta-api.6sensehq.com
# docker stop nginx
# docker rm nginx
# docker stop certbot
# docker rm certbot
# docker compose up -d